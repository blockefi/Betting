{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "This contract has the owner address providing basic authorization control",
			"events": {
				"OwnershipTransferred(address,address)": {
					"details": "Event to show ownership has been transferred",
					"params": {
						"newOwner": "representing the address of the new owner",
						"previousOwner": "representing the address of the previous owner"
					}
				}
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Tells the address of the owner",
					"returns": {
						"_0": "the address of the owner"
					}
				},
				"transferOwnership(address)": {
					"details": "Allows the current owner to transfer control of the contract to a newOwner.",
					"params": {
						"newOwner": "The address to transfer ownership to."
					}
				}
			},
			"title": "CustomOwnable",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"inverse/contracts/upgradeability/CustomOwnable.sol": "CustomOwnable"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f",
			"license": "MIT",
			"urls": [
				"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c",
				"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux"
			]
		},
		"inverse/contracts/upgradeability/CustomOwnable.sol": {
			"keccak256": "0x673aea9554a4b109138acb3dd945e3dd591d2ef0140d763ba36c7369bb9ea840",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://592d279ec7d42eafbd2ea0a26fcd0bdb98a98445a1d1f459969056c421bccba9",
				"dweb:/ipfs/QmYaPYNRr9ACpsHuJvcYfPHXGbi2yubLhCfWCp5SHbYepr"
			]
		}
	},
	"version": 1
}